{
  "name": "ssjs-vsc",
  "displayName": "SSJS Manager",
  "description": "Provides dev tools, syntax highlighting and prettifier for SSJS files.",
  "version": "0.4.4",
  "publisher": "FiB",
  "author": {
    "name": "filipbostik"
  },
  "homepage": "https://fib3.vercel.app/ssjs-vsc",
  "engines": {
    "vscode": "^1.77.0"
  },
  "categories": [
    "Programming Languages",
    "Formatters",
    "Other"
  ],
  "keywords": [
    "ssjs",
    "server-side javascript",
    "ampscript",
    "amp",
    "salesforce",
    "marketing cloud",
    "salesforce marketing cloud",
    "exacttarget",
    "sfmc",
    "mc",
    "content builder",
    "cloud pages",
    "landing pages",
    "code resources",
    "text resource"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/FiB3/ssjs-vsc"
  },
  "icon": "images/logo.v1.1.png",
  "license": "BSD-4-CLAUSE",
  "activationEvents": [
    "onCommand:expressServer.start",
    "onLanguage:ssjs",
    "onLanguage:AMPscript",
    "onLanguage:ampscript",
    "onLanguage:html"
  ],
  "main": "./extension.js",
  "contributes": {
    "commands": [
      {
        "command": "ssjs-vsc.upload-to-prod",
        "title": "Production deployment",
				"category": "SSJS"
      },
      {
        "command": "ssjs-vsc.upload-script",
        "title": "Upload Script to Dev",
				"category": "SSJS"
      },
			{
        "command": "ssjs-vsc.get-url",
        "title": "Get Dev Path / Open Dev Page",
				"category": "SSJS",	
				"icon": "$(play)"
      },
      {
        "command": "ssjs-vsc.start",
        "title": "Start",
				"category": "SSJS"
      },
      {
        "command": "ssjs-vsc.stop",
        "title": "Stop",
				"category": "SSJS"
      },
			{
        "command": "ssjs-vsc.show-config",
        "title": "Show Config",
				"category": "SSJS"
      },
      {
        "command": "ssjs-vsc.create-config",
        "title": "Create Config",
				"category": "SSJS"
      },
      {
        "command": "ssjs-vsc.update-config",
        "title": "Update API Credentials",
				"category": "SSJS"
      },
      {
        "command": "ssjs-vsc.deploy-any-path",
        "title": "Install Dev Page",
				"category": "SSJS"
      },
      {
        "command": "ssjs-vsc.update-any-path",
        "title": "Update Dev Page",
				"category": "SSJS"
      },
      {
        "command": "ssjs-vsc.show-walkthrough",
        "title": "Show Setup Walkthrough",
				"category": "SSJS"
      }
    ],
		"menus": {
			"commandPalette": [
				{
					"command": "ssjs-vsc.upload-to-prod",
					"when": "ssjs-vsc.codeProvider != 'None'"
				},
				{
					"command": "ssjs-vsc.upload-script",
					"when": "ssjs-vsc.codeProvider != 'None'"
				},
				{
					"command": "ssjs-vsc.get-url",
					"when": "ssjs-vsc.codeProvider != 'None'"
				},
				{
					"command": "ssjs-vsc.start",
					"when": "ssjs-vsc.codeProvider == 'Server'"
				},
				{
					"command": "ssjs-vsc.stop",
					"when": "ssjs-vsc.codeProvider == 'Server'"
				},
				{
					"command": "ssjs-vsc.deploy-any-path",
					"when": "ssjs-vsc.codeProvider != 'None'"
				},
				{
					"command": "ssjs-vsc.update-any-path",
					"when": "ssjs-vsc.codeProvider != 'None'"
				}
			],
			"editor/title": [
				{
					"command": "ssjs-vsc.get-url",
					"group": "navigation",
					"when": "resourceExtname == .ssjs || resourceExtname == .amp || resourceExtname == .ampscript || resourceExtname == .html"
				}
			]
		},
    "configuration": {
      "title": "SSJS Manager",
      "properties": {
        "ssjs-vsc.editor.codeProvider": {
          "type": "string",
          "default": "Asset",
          "enum": [
            "None",
            "Asset",
            "Server"
          ],
          "description": "Specifies the way the code is provided to SFMC.",
          "enumDescriptions": [
            "Code is not provided from VSCode to SFMC.",
            "Asset - Code is provided using Content Block. Slower but more secure.",
            "Server - Code is server using local sever. Faster, but requires reverse tunneling."
          ]
        },
        "ssjs-vsc.editor.autoSave": {
          "type": "boolean",
          "default": "true",
          "description": "Upload script automatically when using Asset Provider?"
        },
				"ssjs-vsc.editor.getUrlHandling": {
          "type": "string",
          "default": "Copy",
          "enum": [
						"Copy",
            "Open"
          ],
          "description": "How to handle the URL when using 'Get Dev Path' command?",
          "enumDescriptions": [
            "Copy - copies the URL to the clipboard.",
            "Open - opens the URL in the default browser."
          ]
        },
        "ssjs-vsc.editor.showConfigPanelAutomatically": {
          "type": "boolean",
          "default": "true",
          "description": "Keep showing Config Panel if the extension is not configured or there are news to share?"
        },
        "ssjs-vsc.editor.templatingTags": {
          "type": "string",
          "default": "{{,}}",
          "pattern": "^[{}%<>\\[\\]]{2,3},[{}%<>\\[\\]]{2,3}$",
          "patternErrorMessage": "2 or 3 characters, only: `{}%<>[]` are allowed. Separate using a comma. No spaces.",
          "description": "Set Templating Tags for Mustache. Opening and closing tag separated with a single comma."
        },
        "ssjs-vsc.language.ampscript.capitalizeKeywords": {
          "type": "boolean",
          "default": true,
          "description": "Use upper case characters for most keywords like (false for lowercase)."
        },
        "ssjs-vsc.language.ampscript.capitalizeAndOrNot": {
          "type": "boolean",
          "default": true,
          "description": "Use upper case characters for 'AND', 'OR', 'NOT' keywords (false for lowercase)."
        },
        "ssjs-vsc.language.ampscript.maxParametersPerLine": {
          "type": "number",
          "default": 4,
          "description": "How many method parameters can be located on one line (creates new lines if overflown)."
        }
      }
    },
    "walkthroughs": [
      {
        "id": "setup-ssjs-manager",
        "title": "Setup SSJS Manager",
        "description": "Either follow this walkthrough or you can use the new visual config using the: `SSJS: Show Config` command.",
        "steps": [
          {
            "id": "get-installed-package",
            "title": "Get Your Installed Package",
            "description": "Get an Installed Package for your SFMC Instance. This package must be able to update assets. Don't forget to get the MID of the BU that you want to connect to.",
            "media": {
              "image": "https://raw.githubusercontent.com/FiB3/ssjs-vsc/main/images/walkthrough/installedPackage.png",
              "altText": "Get Installed Package Details"
            }
          },
          {
            "id": "create-cloud-page",
            "title": "Create Web Studio resources",
            "description": "Create a Cloud Page and/or a Text Code Resource in Web Studio and get published URLs - content will be provided later on.",
            "media": {
              "image": "https://raw.githubusercontent.com/FiB3/ssjs-vsc/main/images/walkthrough/createCloudPage.png",
              "altText": "Create Cloud Text Resource"
            }
          },
          {
            "id": "run-create-config",
            "title": "Create Config",
            "description": "Run `SSJS: Create Config` command. Use your Installed Package details to set the connection. MID is optional in case the BU matches the BU that was used to create the Installed Package.",
            "media": {
              "image": "https://raw.githubusercontent.com/FiB3/ssjs-vsc/main/images/ssjs-vsc-demo1.2.gif",
              "altText": "demo of the extension"
            },
            "completionEvents": [
              "onCommand:ssjs-vsc.create-config"
            ]
          },
          {
            "id": "run-install-dev-page",
            "title": "Install Dev Page",
            "description": "Run `SSJS: Install Dev Page` command. Fill all information and the dev page code will be created in SFMC.",
            "media": {
              "image": "https://raw.githubusercontent.com/FiB3/ssjs-vsc/main/images/ssjs-vsc-demo1.2.gif",
              "altText": "dev page installation"
            },
            "completionEvents": [
              "onCommand:ssjs-vsc.deploy-any-path"
            ]
          },
          {
            "id": "set-cloud-page",
            "title": "Fill Development Cloud Page & Text Resource",
            "description": "Fill the Cloud Page and Text Resource with the provided content (in ./vscode/deploy.me.page.ssjs & deploy.me.text.ssjs files). Publish both.",
            "media": {
              "image": "https://raw.githubusercontent.com/FiB3/ssjs-vsc/main/images/walkthrough/setCloudPage.png",
              "altText": "set cloud text resource"
            }
          },
          {
            "id": "develop-ssjs",
            "title": "Write scripts",
            "description": "Develop your code in `.ssjs`, `.amp` or `.html` files. First deployment is done using the `SSJS: Upload Script` command. Following deploys are automatically done on save.",
            "media": {
              "image": "https://raw.githubusercontent.com/FiB3/ssjs-vsc/main/images/ssjs-vsc-demo1.2.gif",
              "altText": "demo of the extension"
            }
          },
          {
            "id": "run-script",
            "title": "Run the code",
            "description": "Run in your Cloud Page or Resource - one page for all scripts! You can get the page parameters into clipboard by running `SSJS: Get Dev Path` command.",
            "media": {
              "image": "https://raw.githubusercontent.com/FiB3/ssjs-vsc/main/images/ssjs-vsc-demo1.2.gif",
              "altText": "demo of the extension"
            }
          }
        ]
      }
    ],
    "languages": [
      {
        "id": "ssjs",
        "aliases": [
          "SSJS",
          "ssjs"
        ],
        "extensions": [
          ".ssjs"
        ],
        "configuration": "./syntaxes/language-configuration.json"
      },
      {
        "id": "AMPscript",
        "aliases": [
          "AMPscript",
          "ampscript"
        ],
        "extensions": [
          ".amp",
          ".ampscript"
        ],
        "configuration": "./syntaxes/language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "ssjs",
        "scopeName": "source.ssjs",
        "path": "./syntaxes/ssjs.tmLanguage.json"
      },
			{
        "language": "AMPscript",
        "scopeName": "source.ssjs",
        "path": "./syntaxes/ssjs.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "ssjs",
        "path": "./syntaxes/snippets.json"
      }
    ]
  },
  "scripts": {
		"vscode:prepublish": "cd ./configView && npm install && npm run build",
    "lint": "eslint .",
    "pretest": "npm run lint",
    "test": "node ./test/runTest.js"
  },
  "dependencies": {
    "@vscode/extension-telemetry": "^0.9.2",
    "beauty-amp-core2": "^0.4.6",
    "express": "^4.19.2",
    "generate-password": "^1.7.0",
    "http-proxy-middleware": "^2.0.6",
    "moment": "^2.29.4",
    "morgan": "^1.10.0",
    "mustache": "^4.2.0",
    "sfmc-fuelsdk-node": "^2.4.0"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "1.77.0",
    "@vscode/test-electron": "^2.3.0",
    "eslint": "^8.36.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0"
  }
}
